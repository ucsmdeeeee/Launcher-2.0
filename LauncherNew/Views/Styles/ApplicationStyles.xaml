<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
                    
    <SolidColorBrush x:Key="BackgroundColor" Color="Black"/>
    <SolidColorBrush x:Key="BorderBrushColor" Color="WhiteSmoke" Opacity="0.2"/>
    <SolidColorBrush x:Key="BorderBackgroundColor" Color="Black" Opacity="0.4"/>
    
    <Style x:Key="WindowBorderStyle" TargetType="Border">
        <Setter Property="Background" Value="{StaticResource BackgroundColor}"></Setter>
        <Setter Property="CornerRadius" Value="10"></Setter>
    </Style>
    
    <Style x:Key="UpperPanel" TargetType="Border">
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrushColor}" />
        <Setter Property="Background" Value="{StaticResource BorderBackgroundColor}" />
        <Setter Property="BorderThickness" Value="0 ,0,0,1" />
    </Style>
    
    <Style x:Key="BottomPanel" TargetType="Border">
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrushColor}" />
        <Setter Property="BorderThickness" Value="0 ,1,0,1" />
    </Style>
    
    <Style x:Key="LeftPanel" TargetType="Border">
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrushColor}" />
        <Setter Property="BorderThickness" Value="0 ,0,1,0" />
    </Style>
    
    <Style x:Key="RightPanel" TargetType="Border">
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrushColor}" />
        <Setter Property="BorderThickness" Value="1 ,0,0,0" />
    </Style>
    
    <Style x:Key="PageStyle" TargetType="Page">
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush Opacity="0.3">
                    <ImageBrush.ImageSource>
                        <BitmapImage UriSource="pack://application:,,,/LauncherNew;component/Views/Resources/art.png" />
                    </ImageBrush.ImageSource>
                </ImageBrush>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="PageStyle2" TargetType="Window">
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush Opacity="0.3">
                    <ImageBrush.ImageSource>
                        <BitmapImage UriSource="pack://application:,,,/LauncherNew;component/Views/Resources/art.png" />
                    </ImageBrush.ImageSource>
                </ImageBrush>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="BorderPortal" TargetType="Border">
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush Opacity="0.7">
                    <ImageBrush.ImageSource>
                        <BitmapImage UriSource="pack://application:,,,/LauncherNew;component/Views/Resources/portal.png" />
                    </ImageBrush.ImageSource>
                </ImageBrush>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="BorderSetka" TargetType="Border">
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush Opacity="0.7">
                    <ImageBrush.ImageSource>
                        <BitmapImage UriSource="pack://application:,,,/LauncherNew;component/Views/Resources/setka.png" />
                    </ImageBrush.ImageSource>
                </ImageBrush>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="BorderSetka2" TargetType="Border">
        <Setter Property="Background">
            <Setter.Value>
                <ImageBrush Opacity="0.7">
                    <ImageBrush.ImageSource>
                        <BitmapImage UriSource="pack://application:,,,/LauncherNew;component/Views/Resources/setka2.png" />
                    </ImageBrush.ImageSource>
                </ImageBrush>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="MinecraftBlockStyle">
    <Setter Property="Template">
        <Setter.Value>
            <ControlTemplate TargetType="Button">
                <Grid>
                    <!-- Базовый фон блока -->
                    <Image x:Name="BaseImage" Source="pack://application:,,,/Views/Resources/block.png" Stretch="Fill" />

                    <!-- Эффект трещин -->
                    <Image Source="pack://application:,,,/Views/Resources/cracks.png" Stretch="Fill" Opacity="0" x:Name="Cracks" />

                    <!-- Отображение текста кнопки -->
                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                </Grid>
                <ControlTemplate.Triggers>
                    <!-- Триггер для отображения трещин при наведении -->
                    <Trigger Property="IsMouseOver" Value="True">
                        <!-- Смена изображения -->
                        <Setter TargetName="BaseImage" Property="Source" Value="pack://application:,,,/Views/Resources/cracks.png" />

                        <!-- Анимация тряски -->
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard RepeatBehavior="Forever">
                                    <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                                                     From="-2" To="2" Duration="0:0:0.05" AutoReverse="True" />
                                    <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"
                                                     From="-2" To="2" Duration="0:0:0.05" AutoReverse="True" />
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>
                        <Trigger.ExitActions>
                            <!-- Сброс позиции -->
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                                                     To="0" Duration="0:0:0.1" />
                                    <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"
                                                     To="0" Duration="0:0:0.1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.ExitActions>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
        </Setter.Value>
    </Setter>
    <!-- Дополнительные настройки кнопок -->
    <Setter Property="Width" Value="100" />
    <Setter Property="Height" Value="100" />
    <Setter Property="Margin" Value="5" />
    <Setter Property="RenderTransform">
        <Setter.Value>
            <TranslateTransform />
        </Setter.Value>
    </Setter>
</Style>

    
    
    <Style TargetType="Button" x:Key="MinecraftPortalStyle">
    <Setter Property="Template">
        <Setter.Value>
            <ControlTemplate TargetType="Button">
                <Grid>
                    <!-- Базовый фон блока -->
                    <Image x:Name="BaseImage" Opacity="0.2" Source="pack://application:,,,/Views/Resources/portalBut.png" Stretch="Fill" />


                    <!-- Отображение текста кнопки -->
                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                </Grid>
                <ControlTemplate.Triggers>
                    <!-- Триггер для отображения трещин при наведении -->
                    <Trigger Property="IsMouseOver" Value="True">
                        <!-- Анимация тряски -->
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard RepeatBehavior="Forever">
                                    <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                                                     From="-2" To="2" Duration="0:0:0.05" AutoReverse="True" />
                                    <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"
                                                     From="-2" To="2" Duration="0:0:0.05" AutoReverse="True" />
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>
                        <Trigger.ExitActions>
                            <!-- Сброс позиции -->
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                                                     To="0" Duration="0:0:0.1" />
                                    <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"
                                                     To="0" Duration="0:0:0.1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.ExitActions>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
        </Setter.Value>
    </Setter>
    <!-- Дополнительные настройки кнопок -->
    <Setter Property="Width" Value="100" />
    <Setter Property="Height" Value="100" />
    <Setter Property="Margin" Value="5" />
    <Setter Property="RenderTransform">
        <Setter.Value>
            <TranslateTransform />
        </Setter.Value>
    </Setter>
</Style>
    
    
    
    
    <Style TargetType="Button" x:Key="MinecraftChestStyle">
    <Setter Property="Template">
        <Setter.Value>
            <ControlTemplate TargetType="Button">
                <Grid>
                    <!-- Базовый фон блока -->
                    <Image x:Name="BaseImage"  Source="pack://application:,,,/Views/Resources/chest.png" Stretch="Fill" />


                    <!-- Отображение текста кнопки -->
                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                </Grid>
                <ControlTemplate.Triggers>
                    <!-- Триггер для отображения трещин при наведении -->
                    <Trigger Property="IsMouseOver" Value="True">
                        <!-- Анимация тряски -->
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard RepeatBehavior="Forever">
                                    <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                                                     From="-2" To="2" Duration="0:0:0.05" AutoReverse="True" />
                                    <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"
                                                     From="-2" To="2" Duration="0:0:0.05" AutoReverse="True" />
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>
                        <Trigger.ExitActions>
                            <!-- Сброс позиции -->
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                                                     To="0" Duration="0:0:0.1" />
                                    <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"
                                                     To="0" Duration="0:0:0.1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.ExitActions>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
        </Setter.Value>
    </Setter>
    <!-- Дополнительные настройки кнопок -->
    <Setter Property="Width" Value="100" />
    <Setter Property="Height" Value="100" />
    <Setter Property="Margin" Value="5" />
    <Setter Property="RenderTransform">
        <Setter.Value>
            <TranslateTransform />
        </Setter.Value>
    </Setter>
</Style>
    
        <Style TargetType="Button" x:Key="MinecraftBlockStylePanel">
    <Setter Property="Template">
        <Setter.Value>
            <ControlTemplate TargetType="Button">
                <Grid>
                    <!-- Базовый фон блока -->
                    <Image x:Name="BaseImage" Source="pack://application:,,,/Views/Resources/block.png" Stretch="Fill" />

                    <!-- Эффект трещин -->
                    <Image Source="pack://application:,,,/Views/Resources/cracks.png" Stretch="Fill" Opacity="0" x:Name="Cracks" />

                    <!-- Отображение текста кнопки -->
                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                </Grid>
                <ControlTemplate.Triggers>
                    <!-- Триггер для отображения трещин при наведении -->
                    <Trigger Property="IsMouseOver" Value="True">
                        <!-- Смена изображения -->
                        <Setter TargetName="BaseImage" Property="Source" Value="pack://application:,,,/Views/Resources/cracks.png" />

                        <!-- Анимация тряски -->
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard RepeatBehavior="Forever">
                                    <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                                                     From="-2" To="2" Duration="0:0:0.05" AutoReverse="True" />
                                    <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"
                                                     From="-2" To="2" Duration="0:0:0.05" AutoReverse="True" />
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>
                        <Trigger.ExitActions>
                            <!-- Сброс позиции -->
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                                                     To="0" Duration="0:0:0.1" />
                                    <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"
                                                     To="0" Duration="0:0:0.1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.ExitActions>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
        </Setter.Value>
    </Setter>
    <!-- Дополнительные настройки кнопок -->
    <Setter Property="Width" Value="30" />
    <Setter Property="Height" Value="30" />
    <Setter Property="Margin" Value="5" />
    <Setter Property="RenderTransform">
        <Setter.Value>
            <TranslateTransform />
        </Setter.Value>
    </Setter>
</Style>
    
    <Style TargetType="Button" x:Key="MinecraftAddStyle">
    <Setter Property="Template">
        <Setter.Value>
            <ControlTemplate TargetType="Button">
                <Grid>
                    <!-- Базовый фон блока -->
                    
                    <Image x:Name="BaseImage"  Source="{Binding ImagePath}" Stretch="Fill" />


                    <!-- Отображение текста кнопки -->
                    <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                </Grid>
                <ControlTemplate.Triggers>
                    <!-- Триггер для отображения трещин при наведении -->
                    <Trigger Property="IsMouseOver" Value="True">
                        <!-- Анимация тряски -->
                        <Trigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard RepeatBehavior="Forever">
                                    <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                                                     From="-2" To="2" Duration="0:0:0.05" AutoReverse="True" />
                                    <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"
                                                     From="-2" To="2" Duration="0:0:0.05" AutoReverse="True" />
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.EnterActions>
                        <Trigger.ExitActions>
                            <!-- Сброс позиции -->
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.X)"
                                                     To="0" Duration="0:0:0.1" />
                                    <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(TranslateTransform.Y)"
                                                     To="0" Duration="0:0:0.1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </Trigger.ExitActions>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
        </Setter.Value>
    </Setter>
    <!-- Дополнительные настройки кнопок -->
    <Setter Property="Width" Value="100" />
    <Setter Property="Height" Value="100" />
    <Setter Property="Margin" Value="5" />
    <Setter Property="RenderTransform">
        <Setter.Value>
            <TranslateTransform />
        </Setter.Value>
    </Setter>
</Style>
    
    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    
    
   
</ResourceDictionary>